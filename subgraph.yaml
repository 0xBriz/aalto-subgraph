specVersion: 0.0.2
description: Balancer is a non-custodial portfolio manager, liquidity provider, and price sensor.
repository: https://github.com/balancer-labs/balancer-subgraph-v2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Vault 
    network: dev
    source:
      #address: "0x51ea4ece31bfd87a6eb101c145c98ce3d2821d2d"
      #address: "0xcBf7C38134084030584E3C769e9c2Fef7Cd2E9Fd"
      address: "0x9fCCc786024B9027169e257BACf4bf77af0f9c99"
      abi: Vault
      startBlock: 1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/vault.ts
      entities:
        - Balancer
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: BToken
          file: ./abis/BToken.json
      eventHandlers:
        # TODO move to call handler
        - event: PoolCreated(bytes32)
          handler: handleNewPool
        - event: Deposited(indexed address,indexed address,indexed address,uint128)
          handler: handleUserBalanceDeposited
        - event: Withdrawn(indexed address,indexed address,indexed address,uint128)
          handler: handleUserBalanceWithdrawn
      callHandlers:
        - function: addLiquidity(bytes32,address,address[],uint128[],bool)
          handler: handleAddLiquidity
        - function: removeLiquidity(bytes32,address,address[],uint128[],bool)
          handler: handleRemoveLiquidity
        #- function: setPoolController
          #handler: handleSetPoolController
templates:
  - kind: ethereum/contract
    name: PoolTokenizer
    network: dev
    source:
      abi: FixedSetPoolTokenizer
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/poolController.ts
      entities:
        - FixedSetPoolTokenizer
        - BToken
      abis:
        - name: FixedSetPoolTokenizer
          file: ./abis/FixedSetPoolTokenizer.json
        - name: BToken
          file: ./abis/BToken.json
      callHandlers:
        - function: joinPool(uint256, uint128[], bool, address)
          handler: handleJoinPool
        - function: exitPool(uint256, uint256[], bool, address)
          handler: handleExitPool
